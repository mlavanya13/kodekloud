#
# Step 1: kubectl create namespace jekyll-namespace-datacenter
# Step 1: kubectl create -f <this file>
# Step 2: Wait for the jekyll pod to be in 'Running' state
# Step 3: Verify: kubectl exec jekyll-pod-datacenter --namespace jekyll-namespace-datacenter
#         -- curl http://localhost:4000/
#         You should see a valid HTML content being returned
# Step 4: Verify: Open Jekyll app on browser by clicking 'Open Port on Host 1'
#         and port as NodePort below. You should see the page without any errors
#
# For tips on getting better at Kubernetes tasks, check out the README.md
# in this folder
#
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jekyll-site-datacenter
  namespace: jekyll-namespace-datacenter
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: jekyll-service-datacenter
  namespace: jekyll-namespace-datacenter
spec:
  type: NodePort
  selector:
    app: jekyll-pod-datacenter
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 4000
      nodePort: 31181
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Pod
metadata:
  name: jekyll-pod-datacenter
  namespace: jekyll-namespace-datacenter
  labels:
    app: jekyll-pod-datacenter
spec:
  volumes:
    - name: site
      persistentVolumeClaim:
        claimName: jekyll-site-datacenter
  initContainers:
    - name: jekyll-init-datacenter
      image: kodekloud/jekyll
      imagePullPolicy: IfNotPresent
      command: ["jekyll", "new", "/site"]
      volumeMounts:
        - name: site
          mountPath: /site
  containers:
    - name: jekyll-container-datacenter
      image: kodekloud/jekyll-serve
      volumeMounts:
        - name: site
          mountPath: /site
